// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl= env("DIRECT_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String   // hashed password
  name         String?
  apiKey       ApiKey?
  bots         Bot[]
  payments     Payment[]
  plan         Plan      @default(FREE)   // FREE or PRO
  requestsLeft Int       @default(100)    // API calls remaining
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Bot {
  id        String   @id @default(cuid())
  name      String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now())
}

model ApiKey {
  id        String   @id @default(cuid())
  key       String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique // enforce one key per user
  createdAt DateTime @default(now())
}

model Payment {
  id          String   @id @default(cuid())
  razorpayId  String   @unique   // Razorpay payment/order id
  amount      Int
  status      String             // SUCCESS / FAILED
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
}

enum Plan {
  FREE
  PRO
}
